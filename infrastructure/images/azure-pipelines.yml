trigger:
- main

pr:
  autoCancel: true
  branches:
    include:
    - main

variables:
  - name: image_type
    value: ubuntu2004
  - name: image_readme_name
    value: Ubuntu2004-README.md

jobs:
  - job:
    displayName: Image Generation ($(image_type))
    timeoutInMinutes: 600
    cancelTimeoutInMinutes: 30
    pool:
      vmImage: 'ubuntu-latest'
  
    steps:      
    - task: PowerShell@2
      displayName: 'Set image template variables'
      inputs:
        targetType: 'inline'
        script: |
          $ImageType = "$(image_type)"
          $TemplateDirectoryName = if ($ImageType.StartsWith("ubuntu")) { "linux" } else { "win" }
          $TemplateDirectoryPath = Join-Path "infrastructure/images" $TemplateDirectoryName | Resolve-Path
          $TemplatePath = Join-Path $TemplateDirectoryPath "$ImageType.json"
          Write-Host "##vso[task.setvariable variable=TemplateDirectoryPath;]$TemplateDirectoryPath"
          Write-Host "##vso[task.setvariable variable=TemplatePath;]$TemplatePath"
  
    - task: PowerShell@2
      displayName: 'Build VM'
      inputs:
        targetType: filePath
        filePath: ./infrastructure/images/build-image.ps1
        arguments: -ResourcesNamePrefix $(Build.BuildId) `
                          -ClientId $(CLIENT_ID) `
                          -ClientSecret $(CLIENT_SECRET) `
                          -TemplatePath $(TemplatePath) `
                          -ResourceGroup $(AZURE_RESOURCE_GROUP) `
                          -StorageAccount $(AZURE_STORAGE_ACCOUNT) `
                          -SubscriptionId $(AZURE_SUBSCRIPTION) `
                          -TenantId $(AZURE_TENANT) `
                          -Location $(AZURE_LOCATION) `
                          -VirtualNetworkName $(BUILD_AGENT_VNET_NAME) `
                          -VirtualNetworkRG $(BUILD_AGENT_VNET_RESOURCE_GROUP) `
                          -VirtualNetworkSubnet $(BUILD_AGENT_SUBNET_NAME) `
                          -GitHubFeedToken $(GITHUB_TOKEN)
      env:
        PACKER_LOG: 1
        PACKER_LOG_PATH: $(Build.ArtifactStagingDirectory)/packer-log.txt
  
    - task: PowerShell@2
      displayName: 'Output Readme file content'
      inputs:
        targetType: 'inline'
        script: |
          Get-Content -Path (Join-Path "$(TemplateDirectoryPath)" "$(image_readme_name)")
  
    - task: PowerShell@2
      displayName: 'Print provisioners duration'
      inputs:
        targetType: 'filePath'
        filePath: ./images.CI/measure-provisioners-duration.ps1
        arguments: -PackerLogPath "$(Build.ArtifactStagingDirectory)/packer-log.txt" `
                          -PrefixToPathTrim "$(TemplateDirectoryPath)" `
                          -PrintTopNLongest 25
  
    - task: PowerShell@2
      displayName: 'Create release for VM deployment'
      inputs:
        targetType: filePath
        filePath: ./images.CI/linux-and-win/create-release.ps1
        arguments: -BuildId $(Build.BuildId) `
                          -Organization $(RELEASE_TARGET_ORGANIZATION) `
                          -DefinitionId $(RELEASE_TARGET_DEFINITION_ID) `
                          -Project $(RELEASE_TARGET_PROJECT) `
                          -ImageName $(image_type) `
                          -AccessToken $(RELEASE_TARGET_TOKEN)
  
    - task: PowerShell@2
      displayName: 'Clean up resources'
      condition: always()
      inputs:
        targetType: filePath
        filePath: ./images.CI/linux-and-win/cleanup.ps1
        arguments: -ResourcesNamePrefix $(Build.BuildId) `
                       -ClientId $(CLIENT_ID) `
                       -ClientSecret $(CLIENT_SECRET) `
                       -Image $(image_type) `
                       -SubscriptionId $(AZURE_SUBSCRIPTION) `
                       -TenantId $(AZURE_TENANT)